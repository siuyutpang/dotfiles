{
    /********************************************
     *          VS Code built-in config         *
     ********************************************/
    "workbench.startupEditor": "none",
    "workbench.editor.enablePreview": true,
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorTheme": "One Dark Pro",
    "workbench.colorCustomizations": {
        "[One Dark Pro]": {
            // "editorCursor.foreground": "#b8b8b896",
            "sideBar.background": "#282c34",
            "statusBar.background": "#282c34",
            "statusBar.border": "#282c34",
            "activityBar.background": "#282c34",
            "tab.border": "#282c34",
            "tab.activeBackground": "#282c34",
            "tab.inactiveBackground": "#282c34",
            "editorGroupHeader.tabsBackground": "#282c34",
        },

        // Reference: https://github.com/mbadolato/iTerm2-Color-Schemes
        "terminal.foreground": "#f8f8f2",
        // "terminal.background": "#1e1f29",
        "terminal.background": "#282c34",
        "terminal.ansiBlack": "#000000",
        "terminal.ansiBlue": "#bd93f9",
        "terminal.ansiCyan": "#8be9fd",
        "terminal.ansiGreen": "#50fa7b",
        "terminal.ansiMagenta": "#ff79c6",
        "terminal.ansiRed": "#ff5555",
        "terminal.ansiWhite": "#bbbbbb",
        "terminal.ansiYellow": "#f1fa8c",
        "terminal.ansiBrightBlack": "#555555",
        "terminal.ansiBrightBlue": "#bd93f9",
        "terminal.ansiBrightCyan": "#8be9fd",
        "terminal.ansiBrightGreen": "#50fa7b",
        "terminal.ansiBrightMagenta": "#ff79c6",
        "terminal.ansiBrightRed": "#ff5555",
        "terminal.ansiBrightWhite": "#ffffff",
        "terminal.ansiBrightYellow": "#f1fa8c",
        "terminal.selectionBackground": "#44475a",
        "terminalCursor.foreground": "#bbbbbb"
    },

    "editor.cursorStyle": "line",
    "editor.cursorBlinking": "solid",
    "editor.smoothScrolling": true,
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.minimap.enabled": false,
    "editor.glyphMargin": false,
    "editor.scrollbar.vertical": "auto",
    "editor.scrollbar.verticalScrollbarSize": 7,
    "editor.scrollbar.horizontal": "visible",
    "editor.scrollbar.horizontalScrollbarSize": 5,
    "editor.fontFamily": "'Inconsolata-Regular', 'Fantasque Sans Mono', 'Comic Code Ligatures', 'LXGW WenKai Mono', 'monospace'",
    "editor.fontSize": 25,
    "editor.fontLigatures": true,
    "editor.fontWeight": "normal",
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
    "editor.occurrencesHighlight": "off",
    "editor.selectionHighlight": false,
    "editor.colorDecorators": false,
    "editor.renderLineHighlight": "line",

    "editor.matchBrackets": "near",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.guides.bracketPairsHorizontal": false,
    "editor.guides.highlightActiveBracketPair": false,

    "editor.quickSuggestions": {
        "other": "on",
        "comments": "off",
        "strings": "off"
    },
	"editor.suggest.insertMode": "insert",
    "editor.inlayHints.enabled": "off",
    "editor.inlineSuggest.enabled": true,
	"editor.snippetSuggestions": "inline",
	"editor.wordBasedSuggestions": "off",
	"editor.suggest.matchOnWordStartOnly": false,
    "editor.tabCompletion": "off",
	"editor.suggest.snippetsPreventQuickSuggestions": true,
    "emmet.triggerExpansionOnTab": true,

    "terminal.integrated.fontFamily":  "Monaco, 'JetbrainsMono Nerd Font', 'LXGW WenKai Mono'",
    "terminal.integrated.fontSize": 18,
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.cursorBlinking": false,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.cursorWidth": 2,
    "terminal.integrated.fontWeightBold": "normal",
    "terminal.integrated.gpuAcceleration": "off",
    "terminal.integrated.profiles.linux": {
        "zsh": {
            "path": "/usr/bin/zsh",
            "color": "terminal.ansiMagenta"
        }
    },
    "terminal.integrated.defaultProfile.linux": "zsh",
	"terminal.integrated.showExitAlert": true,
    "terminal.integrated.shellIntegration.enabled": false,
    "terminal.integrated.shellIntegration.decorationsEnabled": "never",
    "terminal.integrated.enablePersistentSessions": false,
    "terminal.integrated.persistentSessionReviveProcess": "never",

    "window.zoomLevel": 0.6,
    "window.restoreWindows": "none",
    "window.titleBarStyle": "native",
    "window.menuBarVisibility": "toggle",

    "explorer.confirmDelete": false,
    "explorer.compactFolders": false,
    "explorer.confirmDragAndDrop": false,

    "zenMode.centerLayout": false,
    "zenMode.hideLineNumbers": false,

    "security.workspace.trust.startupPrompt": "never",
    "security.workspace.trust.enabled": false,
    "security.workspace.trust.banner": "never",
    "security.workspace.trust.emptyWindow": false,

    "update.mode": "manual",
    "update.showReleaseNotes": false,
    "extensions.ignoreRecommendations": true,
    "outline.showVariables": false,
    "telemetry.telemetryLevel": "off",

    /********************************************
     *                 Vim config               *
     ********************************************/
    "vim.statusBarColorControl": false,
    "vim.statusBarColors.normal": ["#98c379", "#2c323b"],
    "vim.statusBarColors.insert": ["#70c0ba", "#2c323b"],
    "vim.statusBarColors.visual": ["#c678dd", "#2c323b"],
    "vim.statusBarColors.visualline": ["#c678dd", "#2c323b"],
    "vim.statusBarColors.visualblock": ["#c678dd", "#2c323b"],
    "vim.statusBarColors.replace": ["#d54e53", "#2c323b"],

    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.color": "rgba(189, 147, 249, 0.5)",
    "vim.highlightedyank.textColor": "#44475a",

    "vim.easymotionMarkerForegroundColorOneChar": "#e06c75",
    "vim.easymotionMarkerForegroundColorTwoCharFirst": "#f1fa8c",
    "vim.easymotionMarkerForegroundColorTwoCharSecond": "#ffb86c",
    "vim.easymotionIncSearchForegroundColor": "#98c379",

    "vim.cursorStylePerMode.normal": "block",
    "vim.cursorStylePerMode.visual": "line",
    "vim.cursorStylePerMode.visualblock": "line",
    "vim.cursorStylePerMode.visualline": "line",

    "editor.lineNumbers": "relative",
    "editor.cursorSurroundingLines": 5,

    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoSwitchInputMethod.defaultIM": "1",
    "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/bin/fcitx5-remote",
    "vim.autoSwitchInputMethod.switchIMCmd": "/usr/bin/fcitx5-remote -t {im}",

    "vim.surround": true,
    "vim.easymotion": true,
    "vim.useCtrlKeys": true,
    "vim.foldfix": true,
    "vim.useSystemClipboard": true,
    "vim.leader": "<space>",
    "vim.startInInsertMode": false,
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },

    "vim.normalModeKeyBindings": [
        {
            "before": ["<tab>"],
            "commands": ["workbench.action.nextEditor"]
        },
        {
            "before": ["<S-tab>"],
            "commands": ["workbench.action.previousEditor"]
        },
        {
            "before": ["g", "D"],
            "commands": ["editor.action.goToTypeDefinition"]
        },
        {
            "before": ["g", "p"],
            "commands": ["editor.action.peekDefinition", "togglePeekWidgetFocus"]
        },
        {
            "before": ["g", "P"],
            "commands": ["editor.action.peekTypeDefinition", "togglePeekWidgetFocus"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.referenceSearch.trigger", "togglePeekWidgetFocus"]
        },
        {
            "before": ["g", "m"],
            "commands": ["workbench.action.gotoSymbol"]
        },
        {
            "before": ["t", "p"],
            "commands": ["togglePeekWidgetFocus"]
        },
        {
            "before": ["<leader>", "e"],
            "commands": ["workbench.view.explorer"]
        },
        {
            "before": ["]", "d"],
            "commands": ["editor.action.marker.next"]
        },
        {
            "before": ["[", "d"],
            "commands": ["editor.action.marker.prev"]
        },
        {
            "before": ["u"],
            "commands": ["undo"]
        },
        {
            "before": ["C-r"],
            "commands": ["redo"]
        },
    ],

    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["/"],
            "commands": ["actions.find"]
        },
        {
            "before": ["<leader>", "c"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        {
            "before": ["<leader>", "r"],
            "commands": ["saveAll", "code-runner.run"]
        },
        {
            "before": ["<leader>", "w"],
            "commands": ["saveAll"]
        },
        {
            "before": ["<leader>", "s", "v"],
            "commands": ["workbench.action.splitEditor"]
        },
        {
            "before": ["<leader>", "s", "h"],
            "commands": ["workbench.action.splitEditorDown"]
        },
        {
            "before": ["<leader>", "z"],
            "commands": ["workbench.action.toggleZenMode"]
        },
        {
            "before": ["<leader>", "f"],
            "commands": ["workbench.action.toggleEditorWidths"]
        },
        {
            "before": ["<leader>", "q"],
            "commands": ["workbench.action.closeEditorsInOtherGroups"]
        },
     ],

    "vim.visualModeKeyBindings": [
        {
            "before": ["$"],
            "after": ["g", "_"]
        },
        {
            "before": ["p"],
            "after": ["\"", "_", "d", "P"]
        },
    ],

    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["<C-v>"],
            "commands": ["editor.action.clipboardPasteAction"],
        },
        {
            "before": ["<C-a>"],
            "commands": ["editor.action.selectAll"],
            "after": ["<Esc>"]
        },
        {
            "before": ["<C-s>"],
            "commands": ["saveAll"],
            "after": ["<Esc>"]
        },
    ],

    "vim.handleKeys": {
        "<C-c>": false,
        "<C-w>": true,
        "<C-g>": false,
        "<C-d>": false,
        "<C-t>": false,
        "<C-k>": false,
        "<C-s>": true,
    },

    /********************************************
     *              PL related config           *
     ********************************************/
    "C_Cpp.autocompleteAddParentheses": true,
	"C_Cpp.formatting": "clangFormat",
    "C_Cpp.clang_format_style": "{ BasedOnStyle: Google, IndentWidth: 4, AlignConsecutiveDeclarations: true }",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, PointerAlignment: Right }",
    "[c]": {
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[cpp]": {
        "editor.formatOnSave": true
    },
    "C_Cpp.intelliSenseEngine": "disabled",
    "clang-format.style": "{ BasedOnStyle: Google, IndentWidth: 4, AlignConsecutiveDeclarations: true }",
    

    "python.languageServer": "Pylance",
    "python.analysis.autoImportCompletions": true,
	"python.analysis.completeFunctionParens": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": false,
    },

    "java.inlayHints.parameterNames.enabled": "none",
    "[java]": {
        "editor.formatOnSave": false,
        "editor.formatOnPaste": true,
        "editor.defaultFormatter": "redhat.java"
    },
    "java.debug.settings.console": "internalConsole",
    "java.debug.settings.enableRunDebugCodeLens": false,

    "code-runner.executorMap": {
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "python": "python -u",
        "go": "go run",
    },
    "code-runner.clearPreviousOutput": true,

    /********************************************
     *              others config               *
     ********************************************/
    "liveServer.settings.donotShowInfoMsg": true,
    "markdown-preview-enhanced.codeBlockTheme": "atom-dark.css",
    "markdown-preview-enhanced.previewTheme": "one-dark.css",
    "redhat.telemetry.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.currentLine.enabled": false,
    "gitlens.codeLens.enabled": false,
    "color-highlight.markerType": "dot-before",
    "color-highlight.languages": [
        "*",
        "!java",
    ],
    "terminal.integrated.inheritEnv": false,
}